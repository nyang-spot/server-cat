generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions", "filteredRelationCount"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id       Int     @id @default(autoincrement())
  name     String  @unique @db.VarChar(255)
  location String  @db.VarChar(100)
  cats     Cats[]
  likes    Likes[]

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  @@map("users")
}

model Cats {
  id          Int    @id @default(autoincrement())
  description String @db.VarChar(255)
  location    String @db.VarChar(100)
  latitude    Float @db.Real
  longitude   Float @db.Real
  image       String @db.VarChar(255)

  author   Users @relation(fields: [authorId], references: [id])
  authorId Int

  likes Likes[]

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  @@map("cats")
}

model Likes {
  user   Users @relation(fields: [userId], references: [id])
  userId Int   @map("user_id")
  cat    Cats  @relation(fields: [catId], references: [id])
  catId  Int   @map("cat_id")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  @@id([userId, catId])
  @@map("likes")
}
